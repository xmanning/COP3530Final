<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5BDE1204-B201-3429-B1A8-E66BF35ADE7D}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="Z:\Github\voxel2025\lib\glfw\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule Z:/Github/voxel2025/lib/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SZ:/Github/voxel2025 -BZ:/Github/voxel2025 --check-stamp-file Z:/Github/voxel2025/lib/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.26\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\WriteBasicConfigVersionFile.cmake;Z:\Github\voxel2025\lib\glfw\cmake_uninstall.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw3.pc.in;Z:\Github\voxel2025\lib\glfw\src\glfw3Config.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Z:\Github\voxel2025\lib\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule Z:/Github/voxel2025/lib/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SZ:/Github/voxel2025 -BZ:/Github/voxel2025 --check-stamp-file Z:/Github/voxel2025/lib/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.26\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\WriteBasicConfigVersionFile.cmake;Z:\Github\voxel2025\lib\glfw\cmake_uninstall.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw3.pc.in;Z:\Github\voxel2025\lib\glfw\src\glfw3Config.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Z:\Github\voxel2025\lib\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule Z:/Github/voxel2025/lib/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SZ:/Github/voxel2025 -BZ:/Github/voxel2025 --check-stamp-file Z:/Github/voxel2025/lib/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.26\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\WriteBasicConfigVersionFile.cmake;Z:\Github\voxel2025\lib\glfw\cmake_uninstall.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw3.pc.in;Z:\Github\voxel2025\lib\glfw\src\glfw3Config.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Z:\Github\voxel2025\lib\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule Z:/Github/voxel2025/lib/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SZ:/Github/voxel2025 -BZ:/Github/voxel2025 --check-stamp-file Z:/Github/voxel2025/lib/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.26\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.26\Modules\WriteBasicConfigVersionFile.cmake;Z:\Github\voxel2025\lib\glfw\cmake_uninstall.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw3.pc.in;Z:\Github\voxel2025\lib\glfw\src\glfw3Config.cmake.in;Z:\Github\voxel2025\lib\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Z:\Github\voxel2025\lib\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="Z:\Github\voxel2025\ZERO_CHECK.vcxproj">
      <Project>{58D3EAC9-2375-3D77-A85F-C6C9788CF8ED}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\boing.vcxproj">
      <Project>{03A1C14D-C475-39EB-8962-BCE3DFE7B7F2}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\clipboard.vcxproj">
      <Project>{71064D84-855C-3B06-9839-ED985F550E36}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\cursor.vcxproj">
      <Project>{AC866434-5A9C-3C5B-94A5-F649DA24BB44}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\empty.vcxproj">
      <Project>{6352EEE8-A049-31F5-A9BD-017796AFFB0F}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\events.vcxproj">
      <Project>{D18AE4E7-C99F-3121-A848-0DF7533FB9A7}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\gamma.vcxproj">
      <Project>{14F5957A-E57A-3D92-BC68-F655A2972E82}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\gears.vcxproj">
      <Project>{B9B05964-9751-35F8-B2DC-0FF53BB0BC8A}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\src\glfw.vcxproj">
      <Project>{41CD4E12-2332-3A67-8C61-14A111538C77}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\glfwinfo.vcxproj">
      <Project>{6AD3CEB4-3E32-31AF-A6F5-6C8EF0B36DF0}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\heightmap.vcxproj">
      <Project>{8185F804-03A3-318C-B6BE-8917CE389A79}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\icon.vcxproj">
      <Project>{ACFFD71C-6239-39E2-8898-2CF3F2732DBD}</Project>
      <Name>icon</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\iconify.vcxproj">
      <Project>{FA258635-2737-3CD7-B4E9-63A005FFF1B9}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\inputlag.vcxproj">
      <Project>{B5F5AEAB-1737-3BE2-AACC-859303EC3296}</Project>
      <Name>inputlag</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\joysticks.vcxproj">
      <Project>{C789F866-ACFA-3EB6-912C-B835615D4336}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\monitors.vcxproj">
      <Project>{E6388184-B1F5-3BC3-A3BA-46A075A0BD23}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\msaa.vcxproj">
      <Project>{C47F27C2-1B39-3ABD-A5A4-08516D0AD8C9}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\offscreen.vcxproj">
      <Project>{34F83492-BFCC-374F-8338-C0833F6E0A52}</Project>
      <Name>offscreen</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\opacity.vcxproj">
      <Project>{DEE2A6E4-6AA2-3269-A6C9-933327143AC8}</Project>
      <Name>opacity</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\particles.vcxproj">
      <Project>{4996DBDF-3EC7-33DC-BF6C-BE6E2B4BFFEA}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\reopen.vcxproj">
      <Project>{5EE47317-EA7B-3E22-BE8B-F112602F5C24}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\sharing.vcxproj">
      <Project>{424E273D-76BE-376A-89B7-A33214B0CF0E}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\simple.vcxproj">
      <Project>{0E0F83F1-85AB-3903-BA01-5654F80C7450}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\splitview.vcxproj">
      <Project>{25DB9D2E-4F55-3E6F-A64F-4C158B3A3F5B}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\tearing.vcxproj">
      <Project>{125D04B3-2456-3178-84F1-F82FB60BBC45}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\threads.vcxproj">
      <Project>{38FD6D52-E82A-3BF1-998B-09D25C5879BE}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\timeout.vcxproj">
      <Project>{56289BB5-7DB8-30D5-88E4-0D85E938E1B2}</Project>
      <Name>timeout</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\title.vcxproj">
      <Project>{AC68B069-B962-3BCD-A6C2-81737D807105}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\triangle-vulkan.vcxproj">
      <Project>{1648C5FE-36F1-38E7-BC2C-B36E23DE5979}</Project>
      <Name>triangle-vulkan</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\examples\wave.vcxproj">
      <Project>{6C31BCAA-B992-30DF-8251-D1F7AB2C7936}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="Z:\Github\voxel2025\lib\glfw\tests\windows.vcxproj">
      <Project>{C67AA590-B74C-34BB-B857-CD43F1C53EDC}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>